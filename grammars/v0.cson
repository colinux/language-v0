# If this is your first time writing a language grammar, check out:
#   - https://flight-manual.atom.io/hacking-atom/sections/creating-a-grammar/

scopeName: 'source.v0'
name: 'v0'
fileTypes: [
  'v0.txt'
]

patterns: [
  { include: '#metadatas'}
  { include: '#scene' }
  { include: '#replica' }
]

repository:
  metadatas:
    begin: "^.+\\s+=\\s+.+$",
    beginCaptures:
      0: patterns: [{ include: '#metadata' }]
    end: '^$'
    patterns: [{ include: '#metadata' }]

  metadata:
    patterns: [
      {
        match: '^(author|characters_f|characters_h|description|lang|production_play_id|searchable|source_url|style|title)(\\s+=\\s+)(.+)$'
        captures:
          0: name: 'meta.metadata.v0'
          1: name: 'entity.other.attribute-name.v0'
          2: name: 'punctuation.definition.attribute.v0'
          3: name: 'string.unquoted.v0'
      },

      {
        match: "^(.+)(\\s+=\\s+)(.+)$"
        captures:
          0: name: 'meta.metadata.v0'
          1: name: 'invalid.illegal.v0'
          2: name: 'punctuation.definition.attribute.v0'
          3: name: 'string.unquoted.v0'
      }
    ]

  scene:
    begin: '^(== )(.*)$'
    beginCaptures:
      0: name: 'empty.heading.markup.md'
    end: '^((== .*)|(.+:))$'
    endCaptures:
      2: patterns: [{ include: '#scene' }]
      3: patterns: [{ include: '#replica' }]

  replica:
    begin: '^([^\\(:]+)(.+)?(\\s*:)$'
    beginCaptures:
      1:
        name: 'entity.name.function.v0'
      2:
        patterns:
          [{ include: '#didascaly' }]
      3:
        name: 'punctuation.definition.function.v0'
    patterns: [
      { include: '#didascaly' }
      { include: '#replica' }
      { include: '#scene' }
    ]


  didascaly:
    comment: 'Didascaly'
    match: '(\\()([^\\)]*)(\\))'
    captures:
      0: name: 'meta.comment.v0'
      1: name: 'punctuation.definition.comment.v0'
      2: name: 'comment.line.v0'
      3: name: 'punctuation.definition.comment.v0'
